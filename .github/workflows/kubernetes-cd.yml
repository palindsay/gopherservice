name: Kubernetes CD

on:
  workflow_run:
    workflows: ["Docker CI"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

env:
  KUBECTL_VERSION: v1.32.1

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: production
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Verify cluster connectivity
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy application
        run: |
          # Deploy main application
          kubectl apply -f kubernetes/gopherservice-deployment-service.yaml
          
          # Deploy OpenTelemetry collector
          kubectl apply -f kubernetes/otel-collector-configmap.yaml
          kubectl apply -f kubernetes/otel-collector-deployment-service.yaml
          
          # Wait for rollout to complete
          kubectl rollout status deployment/gopherservice -n default --timeout=5m
          kubectl rollout status deployment/otel-collector -n default --timeout=5m

      - name: Verify deployment
        run: |
          kubectl get pods -l app=gopherservice
          kubectl get services
          kubectl describe deployment gopherservice

      - name: Run smoke tests
        run: |
          # Add basic health checks here
          echo "Deployment completed successfully"
