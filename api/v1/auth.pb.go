// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: api/v1/auth.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User represents a user in the system with authentication and profile information.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user's email address (used for login).
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The user's full name.
	FullName string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The user's roles for authorization.
	Roles []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	// Whether the user account is active.
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// When the user was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// When the user was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// When the user last logged in.
	LastLoginAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_login_at,json=lastLoginAt,proto3" json:"last_login_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_v1_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetLastLoginAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginAt
	}
	return nil
}

// UserCredentials represents user login credentials.
type UserCredentials struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The user's password.
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserCredentials) Reset() {
	*x = UserCredentials{}
	mi := &file_api_v1_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCredentials) ProtoMessage() {}

func (x *UserCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCredentials.ProtoReflect.Descriptor instead.
func (*UserCredentials) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *UserCredentials) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserCredentials) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// JWTToken represents a JSON Web Token for authentication.
type JWTToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The access token for API requests.
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The token type (usually "Bearer").
	TokenType string `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	// When the token expires (Unix timestamp).
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Optional refresh token for obtaining new access tokens.
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Token scope/permissions.
	Scopes        []string `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JWTToken) Reset() {
	*x = JWTToken{}
	mi := &file_api_v1_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JWTToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTToken) ProtoMessage() {}

func (x *JWTToken) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTToken.ProtoReflect.Descriptor instead.
func (*JWTToken) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *JWTToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *JWTToken) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *JWTToken) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *JWTToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *JWTToken) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

// TokenClaims represents the claims embedded in a JWT token.
type TokenClaims struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The user's email.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The user's roles.
	Roles []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	// Token issuer.
	Issuer string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// Token subject.
	Subject string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	// Token audience.
	Audience []string `protobuf:"bytes,6,rep,name=audience,proto3" json:"audience,omitempty"`
	// Issued at (Unix timestamp).
	IssuedAt int64 `protobuf:"varint,7,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	// Expires at (Unix timestamp).
	ExpiresAt int64 `protobuf:"varint,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Not before (Unix timestamp).
	NotBefore     int64 `protobuf:"varint,9,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenClaims) Reset() {
	*x = TokenClaims{}
	mi := &file_api_v1_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenClaims) ProtoMessage() {}

func (x *TokenClaims) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenClaims.ProtoReflect.Descriptor instead.
func (*TokenClaims) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *TokenClaims) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TokenClaims) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TokenClaims) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *TokenClaims) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenClaims) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TokenClaims) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *TokenClaims) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *TokenClaims) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *TokenClaims) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

// RegisterUserRequest is the request to register a new user.
type RegisterUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The user's password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The user's full name.
	FullName string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// Optional roles to assign to the user.
	Roles         []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterUserRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RegisterUserRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// RegisterUserResponse is the response after registering a new user.
type RegisterUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created user (without sensitive information).
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Optional JWT token if auto-login is enabled.
	Token         *JWTToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterUserResponse) GetToken() *JWTToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// LoginRequest is the request to authenticate a user.
type LoginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's credentials.
	Credentials *UserCredentials `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Optional remember me flag for extended token lifetime.
	RememberMe    bool `protobuf:"varint,2,opt,name=remember_me,json=rememberMe,proto3" json:"remember_me,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{6}
}

func (x *LoginRequest) GetCredentials() *UserCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *LoginRequest) GetRememberMe() bool {
	if x != nil {
		return x.RememberMe
	}
	return false
}

// LoginResponse is the response after successful authentication.
type LoginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The authenticated user.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The JWT token for API access.
	Token         *JWTToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{7}
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetToken() *JWTToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// LogoutRequest is the request to logout a user.
type LogoutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The token to invalidate.
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{8}
}

func (x *LogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// LogoutResponse is the response after logging out.
type LogoutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success message.
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{9}
}

func (x *LogoutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RefreshTokenRequest is the request to refresh an access token.
type RefreshTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The refresh token.
	RefreshToken  string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{10}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// RefreshTokenResponse is the response with a new access token.
type RefreshTokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The new JWT token.
	Token         *JWTToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{11}
}

func (x *RefreshTokenResponse) GetToken() *JWTToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// ValidateTokenRequest is the request to validate a JWT token.
type ValidateTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The token to validate.
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenRequest) Reset() {
	*x = ValidateTokenRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRequest) ProtoMessage() {}

func (x *ValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// ValidateTokenResponse is the response with token validation results.
type ValidateTokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the token is valid.
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// The token claims if valid.
	Claims *TokenClaims `protobuf:"bytes,2,opt,name=claims,proto3" json:"claims,omitempty"`
	// Error message if invalid.
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenResponse) Reset() {
	*x = ValidateTokenResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenResponse) ProtoMessage() {}

func (x *ValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateTokenResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateTokenResponse) GetClaims() *TokenClaims {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *ValidateTokenResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// GetUserRequest is the request to get user information.
type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to retrieve.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// GetUserResponse is the response containing user information.
type GetUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user information.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// UpdateUserRequest is the request to update user information.
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The updated user information.
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// Fields to update (field mask).
	UpdateMask    []string `protobuf:"bytes,3,rep,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserRequest) GetUpdateMask() []string {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateUserResponse is the response after updating user information.
type UpdateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// ChangePasswordRequest is the request to change a user's password.
type ChangePasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The current password.
	CurrentPassword string `protobuf:"bytes,2,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	// The new password.
	NewPassword   string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{18}
}

func (x *ChangePasswordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangePasswordRequest) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// ChangePasswordResponse is the response after changing password.
type ChangePasswordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success message.
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordResponse) Reset() {
	*x = ChangePasswordResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResponse) ProtoMessage() {}

func (x *ChangePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{19}
}

func (x *ChangePasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListUsersRequest is the request to list users with pagination.
type ListUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of users to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for pagination.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter by active status.
	IsActive *bool `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	// Filter by role.
	RoleFilter    string `protobuf:"bytes,4,opt,name=role_filter,json=roleFilter,proto3" json:"role_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_api_v1_auth_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{20}
}

func (x *ListUsersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUsersRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *ListUsersRequest) GetRoleFilter() string {
	if x != nil {
		return x.RoleFilter
	}
	return ""
}

// ListUsersResponse is the response containing a list of users.
type ListUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of users.
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Token for next page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of users.
	TotalCount    int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_api_v1_auth_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_auth_proto_rawDescGZIP(), []int{21}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListUsersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_api_v1_auth_proto protoreflect.FileDescriptor

const file_api_v1_auth_proto_rawDesc = "" +
	"\n" +
	"\x11api/v1/auth.proto\x12\x02v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb2\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x1b\n" +
	"\tfull_name\x18\x03 \x01(\tR\bfullName\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12>\n" +
	"\rlast_login_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vlastLoginAt\"C\n" +
	"\x0fUserCredentials\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xa8\x01\n" +
	"\bJWTToken\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"token_type\x18\x02 \x01(\tR\ttokenType\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopes\"\xfb\x01\n" +
	"\vTokenClaims\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x14\n" +
	"\x05roles\x18\x03 \x03(\tR\x05roles\x12\x16\n" +
	"\x06issuer\x18\x04 \x01(\tR\x06issuer\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x12\x1a\n" +
	"\baudience\x18\x06 \x03(\tR\baudience\x12\x1b\n" +
	"\tissued_at\x18\a \x01(\x03R\bissuedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\b \x01(\x03R\texpiresAt\x12\x1d\n" +
	"\n" +
	"not_before\x18\t \x01(\x03R\tnotBefore\"z\n" +
	"\x13RegisterUserRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1b\n" +
	"\tfull_name\x18\x03 \x01(\tR\bfullName\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\"X\n" +
	"\x14RegisterUserResponse\x12\x1c\n" +
	"\x04user\x18\x01 \x01(\v2\b.v1.UserR\x04user\x12\"\n" +
	"\x05token\x18\x02 \x01(\v2\f.v1.JWTTokenR\x05token\"f\n" +
	"\fLoginRequest\x125\n" +
	"\vcredentials\x18\x01 \x01(\v2\x13.v1.UserCredentialsR\vcredentials\x12\x1f\n" +
	"\vremember_me\x18\x02 \x01(\bR\n" +
	"rememberMe\"Q\n" +
	"\rLoginResponse\x12\x1c\n" +
	"\x04user\x18\x01 \x01(\v2\b.v1.UserR\x04user\x12\"\n" +
	"\x05token\x18\x02 \x01(\v2\f.v1.JWTTokenR\x05token\"%\n" +
	"\rLogoutRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"*\n" +
	"\x0eLogoutResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\":\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\":\n" +
	"\x14RefreshTokenResponse\x12\"\n" +
	"\x05token\x18\x01 \x01(\v2\f.v1.JWTTokenR\x05token\",\n" +
	"\x14ValidateTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x80\x01\n" +
	"\x15ValidateTokenResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12'\n" +
	"\x06claims\x18\x02 \x01(\v2\x0f.v1.TokenClaimsR\x06claims\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\")\n" +
	"\x0eGetUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"/\n" +
	"\x0fGetUserResponse\x12\x1c\n" +
	"\x04user\x18\x01 \x01(\v2\b.v1.UserR\x04user\"k\n" +
	"\x11UpdateUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1c\n" +
	"\x04user\x18\x02 \x01(\v2\b.v1.UserR\x04user\x12\x1f\n" +
	"\vupdate_mask\x18\x03 \x03(\tR\n" +
	"updateMask\"2\n" +
	"\x12UpdateUserResponse\x12\x1c\n" +
	"\x04user\x18\x01 \x01(\v2\b.v1.UserR\x04user\"~\n" +
	"\x15ChangePasswordRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12)\n" +
	"\x10current_password\x18\x02 \x01(\tR\x0fcurrentPassword\x12!\n" +
	"\fnew_password\x18\x03 \x01(\tR\vnewPassword\"2\n" +
	"\x16ChangePasswordResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x9f\x01\n" +
	"\x10ListUsersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12 \n" +
	"\tis_active\x18\x03 \x01(\bH\x00R\bisActive\x88\x01\x01\x12\x1f\n" +
	"\vrole_filter\x18\x04 \x01(\tR\n" +
	"roleFilterB\f\n" +
	"\n" +
	"_is_active\"|\n" +
	"\x11ListUsersResponse\x12\x1e\n" +
	"\x05users\x18\x01 \x03(\v2\b.v1.UserR\x05users\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount2\xbc\x06\n" +
	"\vAuthService\x12_\n" +
	"\fRegisterUser\x12\x17.v1.RegisterUserRequest\x1a\x18.v1.RegisterUserResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/auth/register\x12G\n" +
	"\x05Login\x12\x10.v1.LoginRequest\x1a\x11.v1.LoginResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/auth/login\x12K\n" +
	"\x06Logout\x12\x11.v1.LogoutRequest\x1a\x12.v1.LogoutResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/auth/logout\x12^\n" +
	"\fRefreshToken\x12\x17.v1.RefreshTokenRequest\x1a\x18.v1.RefreshTokenResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/auth/refresh\x12b\n" +
	"\rValidateToken\x12\x18.v1.ValidateTokenRequest\x1a\x19.v1.ValidateTokenResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/auth/validate\x12O\n" +
	"\aGetUser\x12\x12.v1.GetUserRequest\x1a\x13.v1.GetUserResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/users/{user_id}\x12[\n" +
	"\n" +
	"UpdateUser\x12\x15.v1.UpdateUserRequest\x1a\x16.v1.UpdateUserResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*2\x13/v1/users/{user_id}\x12w\n" +
	"\x0eChangePassword\x12\x19.v1.ChangePasswordRequest\x1a\x1a.v1.ChangePasswordResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/users/{user_id}/change-password\x12K\n" +
	"\tListUsers\x12\x14.v1.ListUsersRequest\x1a\x15.v1.ListUsersResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/usersB*Z(github.com/plindsay/gopherservice/api/v1b\x06proto3"

var (
	file_api_v1_auth_proto_rawDescOnce sync.Once
	file_api_v1_auth_proto_rawDescData []byte
)

func file_api_v1_auth_proto_rawDescGZIP() []byte {
	file_api_v1_auth_proto_rawDescOnce.Do(func() {
		file_api_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_auth_proto_rawDesc), len(file_api_v1_auth_proto_rawDesc)))
	})
	return file_api_v1_auth_proto_rawDescData
}

var file_api_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_v1_auth_proto_goTypes = []any{
	(*User)(nil),                   // 0: v1.User
	(*UserCredentials)(nil),        // 1: v1.UserCredentials
	(*JWTToken)(nil),               // 2: v1.JWTToken
	(*TokenClaims)(nil),            // 3: v1.TokenClaims
	(*RegisterUserRequest)(nil),    // 4: v1.RegisterUserRequest
	(*RegisterUserResponse)(nil),   // 5: v1.RegisterUserResponse
	(*LoginRequest)(nil),           // 6: v1.LoginRequest
	(*LoginResponse)(nil),          // 7: v1.LoginResponse
	(*LogoutRequest)(nil),          // 8: v1.LogoutRequest
	(*LogoutResponse)(nil),         // 9: v1.LogoutResponse
	(*RefreshTokenRequest)(nil),    // 10: v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),   // 11: v1.RefreshTokenResponse
	(*ValidateTokenRequest)(nil),   // 12: v1.ValidateTokenRequest
	(*ValidateTokenResponse)(nil),  // 13: v1.ValidateTokenResponse
	(*GetUserRequest)(nil),         // 14: v1.GetUserRequest
	(*GetUserResponse)(nil),        // 15: v1.GetUserResponse
	(*UpdateUserRequest)(nil),      // 16: v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),     // 17: v1.UpdateUserResponse
	(*ChangePasswordRequest)(nil),  // 18: v1.ChangePasswordRequest
	(*ChangePasswordResponse)(nil), // 19: v1.ChangePasswordResponse
	(*ListUsersRequest)(nil),       // 20: v1.ListUsersRequest
	(*ListUsersResponse)(nil),      // 21: v1.ListUsersResponse
	(*timestamppb.Timestamp)(nil),  // 22: google.protobuf.Timestamp
}
var file_api_v1_auth_proto_depIdxs = []int32{
	22, // 0: v1.User.created_at:type_name -> google.protobuf.Timestamp
	22, // 1: v1.User.updated_at:type_name -> google.protobuf.Timestamp
	22, // 2: v1.User.last_login_at:type_name -> google.protobuf.Timestamp
	0,  // 3: v1.RegisterUserResponse.user:type_name -> v1.User
	2,  // 4: v1.RegisterUserResponse.token:type_name -> v1.JWTToken
	1,  // 5: v1.LoginRequest.credentials:type_name -> v1.UserCredentials
	0,  // 6: v1.LoginResponse.user:type_name -> v1.User
	2,  // 7: v1.LoginResponse.token:type_name -> v1.JWTToken
	2,  // 8: v1.RefreshTokenResponse.token:type_name -> v1.JWTToken
	3,  // 9: v1.ValidateTokenResponse.claims:type_name -> v1.TokenClaims
	0,  // 10: v1.GetUserResponse.user:type_name -> v1.User
	0,  // 11: v1.UpdateUserRequest.user:type_name -> v1.User
	0,  // 12: v1.UpdateUserResponse.user:type_name -> v1.User
	0,  // 13: v1.ListUsersResponse.users:type_name -> v1.User
	4,  // 14: v1.AuthService.RegisterUser:input_type -> v1.RegisterUserRequest
	6,  // 15: v1.AuthService.Login:input_type -> v1.LoginRequest
	8,  // 16: v1.AuthService.Logout:input_type -> v1.LogoutRequest
	10, // 17: v1.AuthService.RefreshToken:input_type -> v1.RefreshTokenRequest
	12, // 18: v1.AuthService.ValidateToken:input_type -> v1.ValidateTokenRequest
	14, // 19: v1.AuthService.GetUser:input_type -> v1.GetUserRequest
	16, // 20: v1.AuthService.UpdateUser:input_type -> v1.UpdateUserRequest
	18, // 21: v1.AuthService.ChangePassword:input_type -> v1.ChangePasswordRequest
	20, // 22: v1.AuthService.ListUsers:input_type -> v1.ListUsersRequest
	5,  // 23: v1.AuthService.RegisterUser:output_type -> v1.RegisterUserResponse
	7,  // 24: v1.AuthService.Login:output_type -> v1.LoginResponse
	9,  // 25: v1.AuthService.Logout:output_type -> v1.LogoutResponse
	11, // 26: v1.AuthService.RefreshToken:output_type -> v1.RefreshTokenResponse
	13, // 27: v1.AuthService.ValidateToken:output_type -> v1.ValidateTokenResponse
	15, // 28: v1.AuthService.GetUser:output_type -> v1.GetUserResponse
	17, // 29: v1.AuthService.UpdateUser:output_type -> v1.UpdateUserResponse
	19, // 30: v1.AuthService.ChangePassword:output_type -> v1.ChangePasswordResponse
	21, // 31: v1.AuthService.ListUsers:output_type -> v1.ListUsersResponse
	23, // [23:32] is the sub-list for method output_type
	14, // [14:23] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_auth_proto_init() }
func file_api_v1_auth_proto_init() {
	if File_api_v1_auth_proto != nil {
		return
	}
	file_api_v1_auth_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_auth_proto_rawDesc), len(file_api_v1_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_auth_proto_goTypes,
		DependencyIndexes: file_api_v1_auth_proto_depIdxs,
		MessageInfos:      file_api_v1_auth_proto_msgTypes,
	}.Build()
	File_api_v1_auth_proto = out.File
	file_api_v1_auth_proto_goTypes = nil
	file_api_v1_auth_proto_depIdxs = nil
}
